{
  "elastic/elasticsearch_37980": {
    "id": "elastic/elasticsearch_37980",
    "body": "'Eclipse build files were missing so .eclipse project files were not being generated.\\r\\nCloses #37973\\r\\n\\r\\n'",
    "cms": [
      "'Added missing eclipse-build.gradle files\\n\\nCloses #fix/37973'"
    ],
    "commits": {
      "'3e10ee798c932cc1cab1ea6ca679417408fc1416'": {
        "cm": "'Added missing eclipse-build.gradle files\\n\\nCloses #fix/37973'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37964": {
    "id": "elastic/elasticsearch_37964",
    "body": "'This change adds a _meta field storing the version in which\\r\\nthe index mappings were last updated to the 3 ML indices\\r\\nthat didn't previously have one:\\r\\n\\r\\n- .ml-annotations\\r\\n- .ml-meta\\r\\n- .ml-notifications\\r\\n\\r\\nAll other ML indices already had such a _meta field.\\r\\n\\r\\nThis field will be useful if we ever need to automatically\\r\\nupdate the index mappings during a future upgrade.'",
    "cms": ["'[ML] Add meta information to all ML indices'"],
    "commits": {
      "'df18d6b7d9d2236d1512f7476301ecda15b20401'": {
        "cm": "'[ML] Add meta information to all ML indices'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37961": {
    "id": "elastic/elasticsearch_37961",
    "body": "'While working in #33888 I stumbled upon a trivial test case in which a no-op delete operation is executed on an empty index and this index is later closed and reopened as frozen, making the assertion added in #37426 to trip:\\r\\n\\r\\n```java\\r\\njava.lang.AssertionError: max seq. no. [-1] does not match [5]\\r\\n\\tat __randomizedtesting.SeedInfo.seed([B5AAFD71AAC09533]:0)\\r\\n\\tat org.elasticsearch.index.engine.ReadOnlyEngine.assertMaxSeqNoEqualsToGlobalCheckpoint(ReadOnlyEngine.java:141)\\r\\n\\tat org.elasticsearch.index.engine.ReadOnlyEngine.<init>(ReadOnlyEngine.java:115)\\r\\n\\tat org.elasticsearch.index.engine.FrozenEngine.<init>(FrozenEngine.java:75)\\r\\n\\tat org.elasticsearch.index.shard.IndexShard.innerOpenEngineAndTranslog(IndexShard.java:1431)\\r\\n\\tat org.elasticsearch.index.shard.IndexShard.openEngineAndRecoverFromTranslog(IndexShard.java:1384)\\r\\n\\tat org.elasticsearch.index.shard.StoreRecovery.internalRecoverFromStore(StoreRecovery.java:424)\\r\\n\\tat org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromStore$0(StoreRecovery.java:95)\\r\\n\\tat org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:302)\\r\\n\\tat org.elasticsearch.index.shard.StoreRecovery.recoverFromStore(StoreRecovery.java:93)\\r\\n\\tat org.elasticsearch.index.shard.IndexShard.recoverFromStore(IndexShard.java:1678)\\r\\n\\tat org.elasticsearch.index.shard.IndexShard.lambda$startRecovery$6(IndexShard.java:2228)\\r\\n```\\r\\n\\r\\nThe assertion trips because the Translog is synced with max seq=X and global checkpoint=Y but those information are not flushed into the Lucene commit as no real operation has been executed and the IndexWriter has no uncommited changes. \\r\\n\\r\\nThe flushes executed by `TransportVerifyShardBeforeCloseAction` and `IndexShard.close()` won't persist the max seq no and global checkpoint in the Lucene commit, and when the ReadOnlyEngine is opened it will reload max seq no from the last Lucene commit and will detect a mismatch with the global checkpoint loaded from the translog.\\r\\n\\r\\nThis pull request changes the  `TransportVerifyShardBeforeCloseAction` so that it forces a flush when the Translog.isSyncNeeded() method returns true, indicating that the global checkpoint != the last synced globalcheckpoint and also forces a Lucene commit with the same user data. Or we could always force the flush too.\\r\\n\\r\\n'",
    "cms": ["'Close Index API should force a flush if a sync is needed'"],
    "commits": {
      "'82fc65936cc65fd3e764f1c18f5460dcc800d75e'": {
        "cm": "'Close Index API should force a flush if a sync is needed'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37945": {
    "id": "elastic/elasticsearch_37945",
    "body": "'Adding release highlights for ES.'",
    "cms": [
      "'add es release highlights'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
      "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'"
    ],
    "commits": {
      "'6d643fd6cf38dbbf7a0a201c87901a299b5f20e9'": {
        "cm": "'add es release highlights'",
        "comments": []
      },
      "'0f82c284d002eb8efe8dab60f37891266850ef6d'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      },
      "'aa36ad0f8f1ec8b2f34a1eb9dc5fcf4aa9c7c50d'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      },
      "'a728268833bb6a0ba637ccf73d63726c5329ede0'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      },
      "'7ba43435eb7fab49970f3691d01513d31e44db07'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      },
      "'c69b4a799674c091d8cb5acf460a6427ccf158b1'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      },
      "'589e66d4d1cbc900fe3eab61d0b93cc8e2f61a8d'": {
        "cm": "'Update docs/reference/release-notes/highlights-6.6.0.asciidoc\\n\\nCo-Authored-By: pcsanwald <paul.sanwald@elastic.co>'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37943": {
    "id": "elastic/elasticsearch_37943",
    "body": "'This commit improves the example docs for contexts in painless.\\r\\n\\r\\nrelates #34829'",
    "cms": [
      "'Add painless context examples for update and update-by-query\\n\\nThis commit improves the example docs for contexts in painless.\\n\\nrelates #34829'"
    ],
    "commits": {
      "'e57ab3b0a07cafcd7adfd06a84d7cc93ee4f67b3'": {
        "cm": "'Add painless context examples for update and update-by-query\\n\\nThis commit improves the example docs for contexts in painless.\\n\\nrelates #34829'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37939": {
    "id": "elastic/elasticsearch_37939",
    "body": "'Related to https://github.com/elastic/elasticsearch/pull/36796\\r\\n\\r\\nThis PR wraps long sentences and adds the following information about the automated annotations: \\'For example, you can see annotations in {kib} for the periods where these delays occur.\\'\\r\\n\\r\\n'",
    "cms": ["'[DOCS] Wrap long sentences'", "'[DOCS] Add annotation detail'"],
    "commits": {
      "'46691f5ae2c513633830e410290401505364eab4'": {
        "cm": "'[DOCS] Wrap long sentences'",
        "comments": []
      },
      "'d7d73023720310608cd284c7e827c5437f059f0a'": {
        "cm": "'[DOCS] Add annotation detail'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37933": {
    "id": "elastic/elasticsearch_37933",
    "body": "'This commit moves the auditing of job deletion related errors\\r\\nto the final listener in the job delete action. This ensures\\r\\nany error that occurs during job deletion is audited.\\r\\n'",
    "cms": [
      "'[ML] Audit all errors during job deletion\\n\\nThis commit moves the auditing of job deletion related errors\\nto the final listener in the job delete action. This ensures\\nany error that occurs during job deletion is audited.'"
    ],
    "commits": {
      "'9b8d4cb49a6ce4157144191ace401d10f2b77e04'": {
        "cm": "'[ML] Audit all errors during job deletion\\n\\nThis commit moves the auditing of job deletion related errors\\nto the final listener in the job delete action. This ensures\\nany error that occurs during job deletion is audited.'",
        "comments": []
      }
    }
  },
  "elastic/elasticsearch_37923": {
    "id": "elastic/elasticsearch_37923",
    "body": "'The clusterAlias member is only used in the copy constructor, to be able\\r\\nto reconstruct the fully qualified index. It is also possible to remove\\r\\nthe instance member and add a private constructor that accepts the already built Index object which contains the cluster alias.'",
    "cms": [
      "'Remove clusterAlias instance member from QueryShardContext\\n\\nThe clusterAlias member is only used in the copy constructor, to be able\\nto reconstruct the fully qualified index. It is also possible to remove\\nthe instance member and add a private constructor that accepts the already built Index object which contains the cluster alias.'",
      "'Merge branch 'master' into minor/query_shard_context_cluster_alias'",
      "'Merge branch 'master' into minor/query_shard_context_cluster_alias'",
      "'Merge branch 'master' into minor/query_shard_context_cluster_alias'"
    ],
    "commits": {
      "'2e8dfb1ecb380922720b0afe0fb331086818702f'": {
        "cm": "'Remove clusterAlias instance member from QueryShardContext\\n\\nThe clusterAlias member is only used in the copy constructor, to be able\\nto reconstruct the fully qualified index. It is also possible to remove\\nthe instance member and add a private constructor that accepts the already built Index object which contains the cluster alias.'",
        "comments": []
      },
      "'235f1cc2aeb3b5e54805376a87c0a3b1c0a8a71f'": {
        "cm": "'Merge branch 'master' into minor/query_shard_context_cluster_alias'",
        "comments": [
          "+/*",
          "+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one",
          "+ * or more contributor license agreements. Licensed under the Elastic License;",
          "+ * you may not use this file except in compliance with the Elastic License.",
          "+ */",
          "+/*",
          "+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one",
          "+ * or more contributor license agreements. Licensed under the Elastic License;",
          "+ * you may not use this file except in compliance with the Elastic License.",
          "+ */",
          "+/*",
          "+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one",
          "+ * or more contributor license agreements. Licensed under the Elastic License;",
          "+ * you may not use this file except in compliance with the Elastic License.",
          "+ */",
          "+        // Assert appropriate task state and assignment numbers",
          "+        // Set the upgrade mode setting",
          "+        // Assert state for tasks still exists and that the upgrade setting is set",
          "+        //Disable the setting",
          "+            // If we are waiting for an upgrade to complete, we should not assign to a node",
          "+/*",
          "+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one",
          "+ * or more contributor license agreements. Licensed under the Elastic License;",
          "+ * you may not use this file except in compliance with the Elastic License.",
          "+ */",
          "+        // Don't want folks spamming this endpoint while it is in progress, only allow one request to be handled at a time",
          "+        // Noop, nothing for us to do, simply return fast to the caller",
          "+        // <4> We have unassigned the tasks, respond to the listener.",
          "+                // Wait for our tasks to all stop",
          "+        // <3> After isolating the datafeeds, unassign the tasks",
          "+        /*",
          "+                 * Before `upgrade_mode: true`, there were unassigned tasks because node task assignment was maxed out (tasks A, B)",
          "+                 * There were assigned tasks executing fine (tasks C, D)",
          "+                 * While `upgrade_mode: true` all are attempting to be re-assigned, but cannot and end up with the AWAITING_UPGRADE reason",
          "+                 * `upgrade_mode: false` opens the flood gates, all tasks are still attempting to re-assign",
          "+                 * A or B could be re-assigned before either C or D. Thus, previously erred tasks are now executing fine, and previously",
          "+         */",
          "+                // State change was not acknowledged, we either timed out or ran into some exception",
          "+                // We should not continue and alert failure to the end user",
          "+                // Did we change from disabled -> enabled?",
          "+                            // Wait for jobs to not be \\'Awaiting upgrade\\'",
          "+                            // Datafeeds to wait for a non-\\'Awaiting upgrade\\' assignment and for the job task allocations to converge",
          "+                            // If we do not wait, deleting datafeeds, or attempting to unallocate them again causes issues as the",
          "+                            // job's task allocationId could have changed during either process.",
          "+        //<1> Change MlMetadata to indicate that upgrade_mode is now enabled",
          "+    /**",
          "+     * Unassigns all Job and Datafeed tasks.",
          "+     * <p>",
          "+     * The reason for unassigning both types is that we want the Datafeed to attempt re-assignment once `upgrade_mode` is",
          "+     * disabled.",
          "+     * <p>",
          "+     * If we do not force an allocation change for the Datafeed tasks, they will never start again, since they were isolated.",
          "+     * <p>",
          "+     * Datafeed tasks keep the state as `started` and Jobs stay `opened`",
          "+     *",
          "+     * @param tasksCustomMetaData Current state of persistent tasks",
          "+     * @param listener            Alerted when tasks are unassignd",
          "+     */",
          "+/*",
          "+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one",
          "+ * or more contributor license agreements. Licensed under the Elastic License;",
          "+ * you may not use this file except in compliance with the Elastic License.",
          "+ */",
          "+        // TODO: remove deprecated endpoint in 8.0.0"
        ]
      },
      "'7a08371b73996bc02f5693d5cdff8dccd3e232dd'": {
        "cm": "'Merge branch 'master' into minor/query_shard_context_cluster_alias'",
        "comments": [
          "+        // The injected Unfollow step will run pretty rapidly here, so we need",
          "+        // to wait for it to settle into the \\'stable\\' step of waiting to be",
          "+        // ready to roll over",
          "+            // tag::ilm-explain-lifecycle-execute",
          "+            // end::ilm-explain-lifecycle-execute",
          "+            // tag::ilm-explain-lifecycle-response",
          "+            // end::ilm-explain-lifecycle-response",
          "+             */",
          "+            // parse the logs and ensure that Elasticsearch died with the expected cause",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * This test confirms JSON log structure is properly formatted and can be parsed.",
          "+ * It has to be in a <code>org.elasticsearch.common.logging</code> package to use <code>PrefixLogger</code>",
          "+ */",
          "+                    //message field will have a single line with json escaped",
          "+                    //stacktrace field will have each json line will in a separate array element",
          "+        // need to use custom config path so we can use a custom log4j2.properties file for the test",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * This test verifies that Elasticsearch can startup successfully with a custom logging config using variables introduced in",
          "+ * <code>ESJsonLayout</code>",
          "+ * The intention is to confirm that users can still run their Elasticsearch instances with previous configurations.",
          "+ */",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * Formats log events as strings in a json format.",
          "+ * <p>",
          "+ * The class is wrapping the {@link PatternLayout} with a pattern to format into json. This gives more flexibility and control over how the",
          "+ * log messages are formatted in {@link org.apache.logging.log4j.core.layout.JsonLayout}",
          "+ */",
          "+    /**",
          "+     * Fields used in a pattern to format a json log line:",
          "+     * <ul>",
          "+     * <li>type - the type of logs. These represent appenders and help docker distinguish log streams.</li>",
          "+     * <li>timestamp - ISO8601 with additional timezone ID</li>",
          "+     * <li>level - INFO, WARN etc</li>",
          "+     * <li>component - logger name, most of the times class name</li>",
          "+     * <li>cluster.name - taken from sys:es.logs.cluster_name system property because it is always set</li>",
          "+     * <li>node.name - taken from NodeNamePatternConverter, as it can be set in runtime as hostname when not set in elasticsearch.yml</li>",
          "+     * <li>node_and_cluster_id - in json as node.id and cluster.uuid - taken from NodeAndClusterIdConverter and present",
          "+     * once clusterStateUpdate is first received</li>",
          "+     * <li>message - a json escaped message. Multiline messages will be converted to single line with new line explicitly",
          "+     * replaced to \\",
          "+     * <li>exceptionAsJson - in json as a stacktrace field. Only present when throwable is passed as a parameter when using a logger.",
          "+     * Taken from JsonThrowablePatternConverter</li>",
          "+     * </ul>",
          "+     */",
          "+/*",
          "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
          "+ * contributor license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright ownership.",
          "+ * The ASF licenses this file to You under the Apache license, Version 2.0",
          "+ * (the \\'License\\'); you may not use this file except in compliance with",
          "+ * the License. You may obtain a copy of the License at",
          "+ *",
          "+ *      http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing, software",
          "+ * distributed under the License is distributed on an \\'AS IS\\' BASIS,",
          "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "+ * See the license for the specific language governing permissions and",
          "+ * limitations under the license.",
          "+ */",
          "+/**",
          "+ * Outputs the Throwable portion of the LoggingEvent as a Json formatted field with array",
          "+ * \\'exception\\': [ \\'stacktrace\\', \\'lines\\', \\'as\\', \\'array\\', \\'elements\\' ]",
          "+ *",
          "+ * Reusing @link org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter which already converts a Throwable from",
          "+ * LoggingEvent into a multiline string",
          "+ */",
          "+    /**",
          "+     * Private as only expected to be used by log4j2 newInstance method",
          "+     */",
          "+    /**",
          "+     * Gets an instance of the class.",
          "+     *",
          "+     * @param config  The current Configuration.",
          "+     * @param options pattern options, may be null.  If first element is \\'short\\',",
          "+     *                only the first line of the throwable will be formatted.",
          "+     * @return instance of class.",
          "+     */",
          "+    /**",
          "+     * {@inheritDoc}",
          "+     */",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * Pattern converter to format the node_and_cluster_id variable into JSON fields <code>node.id</code> and <code>cluster.uuid</code>.",
          "+ * Keeping those two fields together assures that they will be atomically set and become visible in logs at the same time.",
          "+ */",
          "+    /**",
          "+     * Called by log4j2 to initialize this converter.",
          "+     */",
          "+    /**",
          "+     * Updates only once the clusterID and nodeId.",
          "+     * Subsequent executions will throw {@link org.apache.lucene.util.SetOnce.AlreadySetException}.",
          "+     *",
          "+     * @param nodeId      a nodeId received from cluster state update",
          "+     * @param clusterUUID a clusterId received from cluster state update",
          "+     */",
          "+    /**",
          "+     * Formats the node.id and cluster.uuid into json fields.",
          "+     *",
          "+     * @param event - a log event is ignored in this method as it uses the nodeId and clusterId to format",
          "+     */",
          "+        // nodeId/clusterUuid not received yet, not appending",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * The {@link NodeAndClusterIdStateListener} listens to cluster state changes and ONLY when receives the first update",
          "+ * it sets the clusterUUID and nodeID in log4j pattern converter {@link NodeAndClusterIdConverter}.",
          "+ * Once the first update is received, it will automatically be de-registered from subsequent updates.",
          "+ */",
          "+    /**",
          "+     * Subscribes for the first cluster state update where nodeId and clusterId is present",
          "+     * and sets these values in {@link NodeAndClusterIdConverter}.",
          "+     */",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+        //confirms exception is correctly parsed",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * Represents a single log line in a json format.",
          "+ * Parsing log lines with this class confirms the json format of logs",
          "+ */",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * Tests that extend this class verify that all json layout fields appear in the first few log lines after startup",
          "+ * Fields available upon process startup: <code>type</code>, <code>timestamp</code>, <code>level</code>, <code>component</code>,",
          "+ * <code>message</code>, <code>node.name</code>, <code>cluster.name</code>.",
          "+ * Whereas <code>node.id</code> and <code>cluster.uuid</code> are available later once the first clusterState has been received.",
          "+ *",
          "+ *",
          "+ * <code>node.name</code>, <code>cluster.name</code>, <code>node.id</code>, <code>cluster.uuid</code>",
          "+ * should not change across all log lines",
          "+ *",
          "+ * Note that this won't pass for nodes in clusters that don't have the node name defined in elasticsearch.yml <strong>and</strong> start",
          "+ * with DEBUG or TRACE level logging. Those nodes log a few lines before the node.name is set by <code>LogConfigurator.setNodeName</code>.",
          "+ */",
          "+    /**",
          "+     * Number of lines in the log file to check for the <code>node.name</code>, <code>node.id</code> or <code>cluster.uuid</code>. We don't",
          "+     * just check the entire log file because it could be quite long",
          "+     */",
          "+    /**",
          "+     * The node name to expect in the log file.",
          "+     */",
          "+    /**",
          "+     * Open the log file. This is delegated to subclasses because the test",
          "+     * framework doesn't have permission to read from the log file but",
          "+     * subclasses can grant themselves that permission.",
          "+     */",
          "+                      // all lines should have the same nodeName and clusterName",
          "+            //once the nodeId and clusterId are received, they should be the same on remaining lines",
          "+/*",
          "+ * Licensed to Elasticsearch under one or more contributor",
          "+ * license agreements. See the NOTICE file distributed with",
          "+ * this work for additional information regarding copyright",
          "+ * ownership. Elasticsearch licenses this file to you under",
          "+ * the Apache License, Version 2.0 (the \\'License\\'); you may",
          "+ * not use this file except in compliance with the License.",
          "+ * You may obtain a copy of the License at",
          "+ *",
          "+ *    http://www.apache.org/licenses/LICENSE-2.0",
          "+ *",
          "+ * Unless required by applicable law or agreed to in writing,",
          "+ * software distributed under the License is distributed on an",
          "+ * \\'AS IS\\' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "+ * KIND, either express or implied.  See the License for the",
          "+ * specific language governing permissions and limitations",
          "+ * under the License.",
          "+ */",
          "+/**",
          "+ * Returns a stream of json log lines.",
          "+ * This is intended to be used for easy and readable assertions for logger tests",
          "+ */",
          "+            // Make sure the mapping is ready on the shard before we execute the index request; otherwise the index request",
          "+            // will perform a dynamic mapping update which however will be blocked because the latch is remained closed.",
          "+            // Make sure at least one read-request which requires mapping sync is completed.",
          "+            // Create a policy with just a Shrink action on the follower",
          "+                        // Sometimes throw in an extraneous unfollow just to check it doesn't break anything",
          "+            // Follow the index",
          "+            // Make sure it actually took",
          "+            // This should now be in the \\'warm\\' phase waiting for the index to be ready to unfollow",
          "+            // Set the indexing_complete flag on the leader so the index will actually unfollow",
          "+            // Wait for the setting to get replicated",
          "+            // We can't reliably check that the index is unfollowed, because ILM",
          "+            // moves through the unfollow and shrink actions so fast that the",
          "+            // index often disappears between assertBusy checks",
          "+            // Wait for the index to continue with its lifecycle and be shrunk",
          "+            // Wait for the index to complete its policy",
          "+                            // Sometimes throw in an extraneous unfollow just to check it doesn't break anything",
          "+        // Move to a step from the injected unfollow action",
          "+        // If we get an OK on this request we have successfully moved to the injected step",
          "+        // Make sure we actually move on to and execute the shrink action",
          "+        // test the fields is not overwritten"
        ]
      },
      "'5e2eef250babd128d95f9c1532c690615997cf5c'": {
        "cm": "'Merge branch 'master' into minor/query_shard_context_cluster_alias'",
        "comments": []
      }
    }
  }
}
